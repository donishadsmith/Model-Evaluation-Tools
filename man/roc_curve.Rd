% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roc_curve.R
\name{roc_curve}
\alias{roc_curve}
\title{Plot Receiver Operating Characteristic (ROC) Curves for Binary Classification Tasks}
\usage{
roc_curve(
  x,
  models = NULL,
  split = TRUE,
  cv = TRUE,
  thresholds = NULL,
  return_output = TRUE,
  path = NULL,
  ...
)
}
\arguments{
\item{x}{A list object of class \code{"vswift"}. Note that the preprocessed data and models must be saved using
\code{save = list("models" = TRUE, "data" = TRUE)} in \code{classCV} for this function to work.}

\item{models}{A character string or a character vector specifying the classification algorithm(s) to plot ROC curves
for. If \code{NULL}, all models will be plotted. The following options are available:
\itemize{
 \item \code{"lda"}: Linear Discriminant Analysis
 \item \code{"qda"}: Quadratic Discriminant Analysis
 \item \code{"logistic"}: Unregularized Logistic Regression
 \item \code{"regularized_logistic"}: Regularized Logistic Regression
 \item \code{"svm"}: Support Vector Machine
 \item \code{"naivebayes"}: Naive Bayes
 \item \code{"nnet"}: Neural Network
 \item \code{"knn"}: K-Nearest Neighbors
 \item \code{"decisiontree"}: Decision Tree
 \item \code{"randomforest"}: Random Forest
 \item \code{"multinom"}: Unregularized Multinomial Logistic Regression
 \item \code{"regularized_multinomial"}: Regularized Multinomial Logistic Regression
 \item \code{"xgboost"}: Extreme Gradient Boosting
 }
 Default = \code{NULL}.}

\item{split}{A logical value indicating whether to plot ROC curves for the train-test split results. Default is
\code{TRUE}.}

\item{cv}{A logical value indicating whether to plot ROC curves for cross-validation results. Default is \code{TRUE}.}

\item{thresholds}{A numerical vector specifying the thresholds to use when producing the ROC curves. If left as NULL
the unique probability values produced by the training model will be used as thresholds. Default is \code{NULL}.}

\item{return_output}{A logical value indicating whether to return the output list. Default is \code{TRUE}.}

\item{path}{A character string specifying the directory (with a trailing slash) to save the plots.
Default is \code{NULL}.}

\item{...}{Additional arguments passed to the \code{png} function.}
}
\value{
A list containing thresholds used to generate the ROC, target labels, False Positive Rates (FPR),
True Positive Rates (TPR), Area Under The Curve (AUC), and Youdin's Index for all training and validation sets
for each model
}
\description{
Produces ROC curves and computes the area under the curve (AUC) and Youdin's Index.
Currently only works for binary classification tasks.
}
\examples{
# Load an example dataset
data <- iris

# Make Binary
data$Species <- ifelse(data$Species == "setosa", "setosa", "not setosa")

# Perform a train-test split with an 80\% training set and stratified sampling using QDA
result <- classCV(
  data = data,
  target = "Species",
  models = "qda",
  train_params = list(split = 0.8, stratified = TRUE, random_seed = 50),
  save = list(data = TRUE, models = TRUE)
)

# Get ROC curve
roc_curve(result, return_output = FALSE)

}
\author{
Donisha Smith
}
